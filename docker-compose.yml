version: "3.8"

networks:
  payment-network:
    driver: bridge

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - payment-network

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,BROKER://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,BROKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,BROKER://0.0.0.0:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - payment-network

  postgres:
    image: postgres:14
    hostname: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: example
      POSTGRES_PASSWORD: example
      POSTGRES_DB: payment_db
      POSTGRES_INITDB_ARGS: "--auth-host=trust"
    volumes:
      - ./pg_hba.conf:/etc/postgresql/pg_hba.conf
    command: ["postgres", "-c", "wal_level=replica", "-c", "max_wal_senders=10", "-c", "hot_standby=on", "-c", "listen_addresses=*", "-c", "hba_file=/etc/postgresql/pg_hba.conf"]
    networks:
      - payment-network

  postgres-replica1:
    image: postgres:14
    hostname: postgres-replica1
    depends_on:
      - postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: example
      POSTGRES_PASSWORD: example
      POSTGRES_DB: payment_db
    volumes:
      - postgres_replica1_data:/var/lib/postgresql/data
      - ./init-replica.sh:/init-replica.sh:ro
    user: "postgres"
    command: ["/bin/bash", "/init-replica.sh"]
    networks:
      - payment-network

  postgres-replica2:
    image: postgres:14
    hostname: postgres-replica2
    depends_on:
      - postgres
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: example
      POSTGRES_PASSWORD: example
      POSTGRES_DB: payment_db
    volumes:
      - postgres_replica2_data:/var/lib/postgresql/data
      - ./init-replica.sh:/init-replica.sh:ro
    user: "postgres"
    command: ["/bin/bash", "/init-replica.sh"]
    networks:
      - payment-network

  redis:
    image: redis:latest
    hostname: redis
    ports:
      - "6379:6379"
    networks:
      - payment-network

  debezium:
    image: debezium/connect:2.3
    hostname: debezium
    depends_on:
      - kafka
      - postgres
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka:9093
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      STATUS_STORAGE_TOPIC: connect_statuses
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
    networks:
      - payment-network

  payment-service:
    build: ./payment-service
    hostname: payment-service
    depends_on:
      - kafka
      - postgres
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/payment_db
      SPRING_DATASOURCE_USERNAME: example
      SPRING_DATASOURCE_PASSWORD: example
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9093
      SPRING_KAFKA_TOPIC: payment-topic
    networks:
      - payment-network

  payment-worker:
    build: ./payment-worker
    hostname: payment-worker
    depends_on:
      - kafka
      - postgres
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/payment_db
      SPRING_DATASOURCE_USERNAME: example
      SPRING_DATASOURCE_PASSWORD: example
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9093
      SPRING_KAFKA_TOPIC: payment-topic
      SPRING_KAFKA_CONSUMER_GROUP_ID: payment-worker-group
    networks:
      - payment-network

  inquiry-service:
    build: ./inquiry-service
    hostname: inquiry-service
    depends_on:
      - postgres-replica1
      - redis
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-replica1:5432/payment_db
      SPRING_DATASOURCE_USERNAME: example
      SPRING_DATASOURCE_PASSWORD: example
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    networks:
      - payment-network

  nginx:
    image: nginx:latest
    hostname: nginx
    depends_on:
      - payment-service
      - inquiry-service
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - payment-network

volumes:
  postgres_data:
  postgres_replica1_data:
  postgres_replica2_data:
